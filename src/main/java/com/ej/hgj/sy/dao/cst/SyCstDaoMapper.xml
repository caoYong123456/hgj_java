<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ej.hgj.sy.dao.cst.SyCstDaoMapper">

    <resultMap id="BaseMap" type="com.ej.hgj.entity.cst.SyCst">
        <result column="ID" jdbcType="VARCHAR" property="id"/>
        <result column="OrgID" jdbcType="VARCHAR" property="orgId"/>
        <result column="Code" jdbcType="VARCHAR" property="code"/>
        <result column="CstName" jdbcType="VARCHAR" property="cstName"/>
        <result column="CstType" jdbcType="VARCHAR" property="cstType"/>
        <result column="CstLevel" jdbcType="VARCHAR" property="cstLevel"/>
        <result column="IsAffect" jdbcType="INTEGER" property="isAffect"/>
        <result column="ContractCharacter" jdbcType="VARCHAR" property="contractCharacter"/>
        <result column="CerType" jdbcType="VARCHAR" property="cerType"/>
        <result column="CerNO" jdbcType="VARCHAR" property="cerNo"/>
        <result column="LicNO" jdbcType="VARCHAR" property="licNo"/>
        <result column="Mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List" >
--         ID, OrgID, Code, CstName, CstType, CstLevel, IsAffect, ContractCharacter, CerType, CerNO, LicNO, Mobile
        ID, OrgID, Code, CstName, CstType, CstLevel, ContractCharacter, CerNO, LicNO
    </sql>

    <!--查询东方渔人码头客户列表-->
    <select id="getListByProNumOfw" resultMap="BaseMap" parameterType="java.lang.String" >
        select
            c.ID,
            c.OrgID,
            c.Code,
            c.CstName,
            c.CstType,
            c.CstLevel
        from Cst c
                 left join CstCom m on m.CstID = c.ID
        where c.OrgID = '10000' and c.IsAffect = 1
    </select>

    <!--查询新弘北外滩客户列表-->
    <select id="getListByProNumXh" resultMap="BaseMap" parameterType="java.lang.String" >
        select y.ID,y.OrgID,
               y.Code,CONCAT(y.cst_name_min,',', y.cst_name_sub) as CstName,
--                case when y.cst_name_sub is not null
--                         then CONCAT(y.cst_name_min,',', y.cst_name_sub)
--                    end CstName,
               y.CstType,
               y.CstLevel
        from (
                 select
                     t.MainCstID,
                     max(t.ID) AS ID,
                     MAX(t.OrgID) AS OrgID ,
                     max(t.Code) as Code,
                     max(cst.CstName) as cst_name_min,
                     cst_name_sub=stuff((select ','+convert(varchar(200), [cstname]) from  Cst cst
                                                                                               left join CstRel csr on csr.SubCstID = cst.ID
                                         where csr.MainCstID = t.MainCstID  for xml path('')), 1, 1, '') ,
                     MAX(t.CstType) AS CstType,
                     MAX(t.CstLevel) AS CstLevel
                 from (
                          select
                              max(c.ID) AS ID,
                              MAX(c.OrgID) AS OrgID ,
                              max(c.Code) as Code,
                              cr.MainCstID,
                              cr.SubCstID,
                              cstname=stuff((select ','+convert(varchar(200), [cstname]) from
                                  Cst cc
                                      left join CstRel crc on crc.MainCstID = cc.ID
                                             where  cc.id= cr.SubCstID  for xml path('')), 1, 1, ''),
                              MAX(c.CstType) AS CstType,
                              MAX(c.CstLevel) AS CstLevel

                          from Cst c
                                   INNER JOIN RCR b ON c.ID=b.CstID
                                   INNER JOIN House h on b.ResID=h.ID
                                   INNER JOIN Bud d on h.BudID=d.ID
                                   left join CstRel cr on cr.MainCstID = c.ID
                          where c.OrgID != '' and c.IsAffect = 1  and b.IsAffect=1
                          group by
                              cr.MainCstID,
                              cr.SubCstID
                      )t
                          left join cst on cst.id=t.ID
                 group by t.MainCstID

             )y
        where y.OrgID = '10001' and y.cst_name_sub is not null

        union all

        select
            c.ID,
            c.OrgID,c.Code,
            c.CstName,
            c.CstType,
            c.CstLevel
        from Cst c
                 left join CstRel cr on cr.MainCstID = c.ID
        where c.OrgID='10001' and cr.MainCstID is null and c.IsAffect = 1
    </select>

<!--    <select id="getListByProNumXh" resultMap="BaseMap" parameterType="java.lang.String" >-->
<!--        select-->
<!--        <include refid="Base_Column_List" />-->
<!--        from (-->
<!--            select-->
<!--            max(c.ID) AS ID,-->
<!--            MAX(c.OrgID) AS OrgID ,-->
<!--            c.Code,-->
<!--            CstName=stuff((select ','+convert(varchar(200), [CstName]) from Cst b where  b.code= C.code for xml path('')), 1, 1, ''),-->
<!--            MAX(c.CstType) AS CstType,-->
<!--            MAX(c.CstLevel) AS CstLevel,-->
<!--            &#45;&#45; MAX(c.IsAffect) AS IsAffect-->
<!--            MAX(c.ContractCharacter) AS ContractCharacter,-->
<!--            &#45;&#45; m.CerType,-->
<!--            MAX(m.CerNO) AS CerNO,-->
<!--            MAX(m.LicNO) AS LicNO-->
<!--            &#45;&#45;  m.Mobile-->
<!--            from Cst c-->
<!--            left join CstCom m on m.CstID = c.ID-->
<!--            where c.OrgID != '' and c.IsAffect = 1-->
<!--            group by c.code-->
<!--        )t-->
<!--    </select>-->

</mapper>
